{"version":3,"sources":["components/CoinData.js","components/header.js","components/Footer.js","components/CoinList.js","App.js","reportWebVitals.js","index.js"],"names":["CoinData","props","className","src","coin","image","alt","name","current_price","lempiraValue","toLocaleString","style","color","price_change_24h","Header","type","placeholder","onChange","event","input","target","value","getCoins","toLocaleLowerCase","Footer","href","CoinList","useState","coinList","setCoinList","setLempiraValue","LempValue","a","fetch","then","response","json","data","rates","HNL","texto","coinsIncluidas","forEach","includes","push","useEffect","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAyCeA,EAnCE,SAACC,GASd,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKC,IAAKF,EAAMG,KAAKC,MAAOC,IAAI,OAEpC,sBAAKJ,UAAU,UAAf,UACI,6BAAKD,EAAMG,KAAKG,OAChB,sBAAKL,UAAU,YAAf,UACI,8BACI,6CACA,uCACSD,EAAMG,KAAKI,cAAcP,EAAMQ,cAAcC,uBAG1D,8BACI,6DACA,sBAAKC,MAtBP,CACVC,MAAOX,EAAMG,KAAKS,iBAAmB,EAAI,UAAY,WAqBzC,iBACKZ,EAAMG,KAAKS,iBAAiBZ,EAAMQ,cAAcC,iCCd9DI,EAhBA,SAACb,GAQZ,OACI,yBAAQC,UAAU,SAAlB,UACI,2CACA,uBAAOa,KAAK,OAAOC,YAAY,SAASC,SAR7B,SAACC,GAChB,IAAMC,EAAQD,EAAME,OAAOC,MAC3BpB,EAAMqB,SAASH,EAAMI,4BCQdC,EAZA,WAEX,OACI,sBAAKtB,UAAU,SAAf,UACI,4CAAc,sDACd,mBAAGuB,KAAK,iDAAiDL,OAAO,SAAhE,gCACA,mBAAGK,KAAK,+BAA+BL,OAAO,SAA9C,yBACA,mBAAGK,KAAK,gDAAgDL,OAAO,SAA/D,wBCmDGM,EAxDE,WAGb,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAAwCF,mBAAS,IAAjD,mBAAOlB,EAAP,KAAqBqB,EAArB,KAIMC,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,MAAM,wFACxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFb,OACRC,EADQ,OAIdP,EAAgBO,EAAKC,MAAMC,KAJb,2CAAH,qDAUTjB,EAAQ,uCAAG,WAAOkB,GAAP,mBAAAR,EAAA,sEACUC,MAAM,4HADhB,cACPE,EADO,gBAEMA,EAASC,OAFf,OAEPC,EAFO,OAIA,KAAVG,EACCX,EAAYQ,IAENI,EAAiB,GACvBJ,EAAKK,SAAQ,SAAAtC,GACNA,EAAKG,KAAKgB,oBAAoBoB,SAASH,IACtCC,EAAeG,KAAKxC,MAG5ByB,EAAYY,IAbH,2CAAH,sDAuBd,OANAI,qBAAU,WACNvB,EAAS,IACTS,MACD,IAIC,gCACI,cAAC,EAAD,CAAQT,SAAUA,IAClB,qBAAKpB,UAAU,WAAf,SACK0B,EAASkB,KAAI,SAAA1C,GAAI,OACd,cAAC,EAAD,CAAUA,KAAMA,EAAMK,aAAcA,SAG5C,cAAC,EAAD,QC7CGsC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.db8dcac8.chunk.js","sourcesContent":["import React from 'react'\nimport './styleComponents.css'\n\n\n//Recibe un objeto Moneda en los parámetros\n//Lo pinta en pantalla.\nconst CoinData = (props) => {\n\n    const colorChange = () => {\n        const style = {\n            color: props.coin.price_change_24h < 0 ? '#7c0b0b' : '#084015' \n        }\n        return style;\n    }\n\n    return(\n        <div className=\"coinBox\">\n            <div className=\"imgBx\">\n                <img src={props.coin.image} alt=\"\" />\n            </div>\n            <div className=\"content\">\n                <h2>{props.coin.name}</h2>\n                <div className=\"content-p\">\n                    <p>\n                        <strong>Precio:</strong> \n                        <div>\n                            L. {(props.coin.current_price*props.lempiraValue).toLocaleString()}\n                        </div>\n                    </p>\n                    <p>\n                        <strong>Último Cambio (24h):</strong> \n                        <div style={colorChange()}>\n                        L. {(props.coin.price_change_24h*props.lempiraValue).toLocaleString()}  \n                        </div>\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CoinData;\n","import React from 'react';\n\nconst Header = (props) => {\n\n    //Se ejecuta cada vez que el usuario interactue con el input.\n    const inpuChange = (event) => {\n        const input = event.target.value;\n        props.getCoins(input.toLocaleLowerCase());\n    }\n\n    return (\n        <header className=\"header\">\n            <h1>Coin List</h1>\n            <input type=\"text\" placeholder=\"Buscar\" onChange={inpuChange} />\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react'\n\n\nconst Footer = () => {\n\n    return (\n        <div className=\"footer\">\n            <p>Created by <div> Gerald Figueroa</div></p>\n            <a href=\"https://www.coingecko.com/en/api/documentation\" target=\"_blank\">Crypto Monedas API</a>\n            <a href=\"https://exchangeratesapi.io/\" target=\"_blank\">Divisas API</a>\n            <a href=\"https://github.com/GeraldFigueroa/Crypto.Info\" target=\"_blank\">GitHub</a>\n        </div>\n    )\n}\n\nexport default Footer;","import React, {useState, useEffect} from 'react';\nimport CoinData from './CoinData';\nimport Header from './header';\nimport Footer from './Footer';\n\nconst CoinList = () => {\n\n    //Definición del estado;\n    const [coinList, setCoinList] = useState([]);\n\n    //Estado del valor del lempira al día\n    const [lempiraValue, setLempiraValue] = useState([]);\n\n\n    //Actualiza el valor del lempira al día utilizando una API\n    const LempValue = async () => {\n        const data = await fetch('http://api.exchangeratesapi.io/v1/latest?access_key=c3baeaa981b937959ed1edae21336804')\n        .then(response => response.json())\n        \n        setLempiraValue(data.rates.HNL);\n    }\n    \n\n    //Obtiene los datos de la API mediante una petición fetch y actualiza el estado.\n    //Este metodo tambien se utiliza para para buscar.\n    const getCoins = async (texto) => {\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=100&page=1&sparkline=false\"); //Respuesta de la API\n        const data = await response.json(); // Obtenemos los datos en formato json\n\n        if(texto === ''){\n            setCoinList(data);\n        } else{\n            const coinsIncluidas = [];\n            data.forEach(coin => {\n                if(coin.name.toLocaleLowerCase().includes(texto)){\n                    coinsIncluidas.push(coin);\n                }\n            });\n            setCoinList(coinsIncluidas);\n        }  \n    }\n\n    useEffect(() => {\n        getCoins('');\n        LempValue();\n    }, []);\n    \n\n    return(\n        <div>\n            <Header getCoins={getCoins}></Header>\n            <div className=\"coinsBox\">\n                {coinList.map(coin => (\n                    <CoinData coin={coin} lempiraValue={lempiraValue}/>\n                ))}\n            </div>\n            <Footer></Footer>\n        </div>\n    )\n}\n\nexport default CoinList;","import CoinList from './components/CoinList';\n\n\nfunction App() {\n  return (\n    <div>\n      <CoinList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}